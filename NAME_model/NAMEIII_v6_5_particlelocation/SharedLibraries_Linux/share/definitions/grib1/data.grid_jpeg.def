# Copyright 2005-2007 ECMWF
#
# Licensed under the GNU Lesser General Public License which
# incorporates the terms and conditions of version 3 of the GNU
# General Public License.
# See LICENSE and gpl-3.0.txt for details.

# For grib1 -> grib2
#constant dataRepresentationTemplateNumber = 0;

position offsetBeforeData;

if( bitmapPresent || !GDSPresent ) {
  # For grib1 -> grib2
  constant bitMapIndicator = 0;

  meta codedValues data_g1simple_packing(
     section4Length,
     offsetBeforeData,
     offsetSection4,
     unitsFactor,
     unitsBias,
     changingPrecision,
     numberOfCodedValues,
     bitsPerValue,
     referenceValue,
     binaryScaleFactor,
     decimalScaleFactor,
     halfByte,
     packingType,
     grid_ieee,precision
  ) : read_only;
  meta values data_apply_bitmap(codedValues,bitmap,missingValue,binaryScaleFactor) : dump;
  alias data.packedValues = codedValues;
} else {

    # For grib1 -> grib2
    constant bitMapIndicator = 255;

    meta values data_g1simple_packing(
      section4Length,
      offsetBeforeData,
      offsetSection4,
      unitsFactor,
      unitsBias,
      changingPrecision,
      numberOfCodedValues,
      bitsPerValue,
      referenceValue,
      binaryScaleFactor,
      decimalScaleFactor,
      halfByte,
      packingType,
      grid_ieee,precision
    ) : dump;
    alias data.packedValues = values;
}



meta numberOfCodedValues number_of_coded_values(bitsPerValue,offsetBeforeData,offsetAfterData,halfByte,numberOfValues) : dump;

meta packingError simple_packing_error(bitsPerValue,binaryScaleFactor,decimalScaleFactor,referenceValue,ibm) : no_copy;
meta unpackedError simple_packing_error(zero,binaryScaleFactor,decimalScaleFactor,referenceValue,ieee) : no_copy;
template statistics "common/statistics_grid.def";

