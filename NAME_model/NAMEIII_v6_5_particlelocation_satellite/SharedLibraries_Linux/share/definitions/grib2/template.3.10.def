# Copyright 2005-2007 ECMWF
#
# Licensed under the GNU Lesser General Public License which
# incorporates the terms and conditions of version 3 of the GNU
# General Public License.
# See LICENSE and gpl-3.0.txt for details.

# TEMPLATE 3.10, Mercator

include "template.3.shape_of_the_earth.def";

unsigned[4] Ni : dump;
alias numberOfPointsAlongAParallel=Ni;
alias Nx = Ni;
alias geography.Ni=Ni;

unsigned[4] Nj : dump;
alias numberOfPointsAlongAMeridian=Nj;
alias Nx = Nj ;
alias geography.Nj=Nj;

#  La1 - latitude of first grid point
signed[4] latitudeOfFirstGridPoint: edition_specific,no_copy ;
alias La1 =  latitudeOfFirstGridPoint;
meta geography.latitudeOfFirstGridPointInDegrees scale(latitudeOfFirstGridPoint,oneConstant,grib2divider,truncateDegrees) : dump;

#  Lo1 - longitude of first grid point
signed[4] longitudeOfFirstGridPoint : edition_specific,no_copy;
alias Lo1 =  longitudeOfFirstGridPoint;
meta geography.longitudeOfFirstGridPointInDegrees scale(longitudeOfFirstGridPoint,oneConstant,grib2divider,truncateDegrees) : dump;

include "template.3.resolution_flags.def";

#  LaD - Latitude(s) at which the Mercator projection intersects the Earth
# (Latitude(s) where Di and Dj are specified)
signed[4] LaD : edition_specific,no_copy;
meta geography.LaDInDegrees scale(LaD,oneConstant,grib2divider,truncateDegrees) : dump;

#  La2 - latitude of last grid point
signed[4] latitudeOfLastGridPoint : edition_specific,no_copy;
alias La2 =  latitudeOfLastGridPoint;
meta geography.latitudeOfLastGridPointInDegrees scale(latitudeOfLastGridPoint,oneConstant,grib2divider,truncateDegrees) : dump;

#  Lo2 - longitude of last grid point
signed[4] longitudeOfLastGridPoint: edition_specific,no_copy ;
alias Lo2 =  longitudeOfLastGridPoint;
meta geography.longitudeOfLastGridPointInDegrees scale(longitudeOfLastGridPoint,oneConstant,grib2divider,truncateDegrees) : dump;

include "template.3.scanning_mode.def";

#  Orientation of the grid, angle between i direction on the map and the equator
# NOTE 1 NOT FOUND
unsigned[4] orientationOfTheGrid : dump ;
meta geography.orientationOfTheGridInDegrees
    scale(orientationOfTheGrid,oneConstant,grib2divider,truncateDegrees) : dump;
    
#  Di - longitudinal direction grid length
# NOTE 2 NOT FOUND
unsigned[4] Di  : edition_specific,no_copy ;
alias longitudinalDirectionGridLength = Di   ;
meta geography.DiInMetres
    scale(Di,oneConstant,thousand,truncateDegrees) : dump;
    
#  Dj - latitudinal direction grid length
# NOTE 2 NOT FOUND
unsigned[4] Dj  : edition_specific,no_copy ;
alias latitudinalDirectionGridLength =  Dj;
meta geography.DjInMetres
    scale(Dj,oneConstant,thousand,truncateDegrees) : dump;


# END   2/template.3.10 ----------------------------------------------------------------------
