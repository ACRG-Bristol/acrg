# Copyright 2005-2007 ECMWF
#
# Licensed under the GNU Lesser General Public License which
# incorporates the terms and conditions of version 3 of the GNU
# General Public License.
# See LICENSE and gpl-3.0.txt for details.

label "grib 2 Section 5 DATA REPRESENTATION SECTION";
position offsetBSection5;

# START grib2::section
# SECTION 5, DATA REPRESENTATION SECTION
#  Length of section in octets

# (nn)
position offsetSection5;
length[4] section5Length ;

meta section5 section_pointer(offsetSection5,section5Length,5);

#  Number of section
unsigned[1] numberOfSection =5 : read_only;

#  Number of data points where one or more values are specified in Section 7 when a bit map is present,
#  total number of data pints when a bit map is absent.
unsigned[4] numberOfValues  : dump;
alias numberOfCodedValues=numberOfValues;
alias numberOfEffectiveValues=numberOfValues;

#  Data Representation Template Number
codetable[2] dataRepresentationTemplateNumber ('5.0.table',masterDir,localDir) : edition_specific;

template dataRepresentation "grib2/template.5.[dataRepresentationTemplateNumber:l].def";

concept packingType {
#set uses the last one
#get returns the first match
  "grid_simple"                       = { dataRepresentationTemplateNumber = 0;     }
  "spectral_complex"                  = { dataRepresentationTemplateNumber = 51; spectralType=1; spectralMode=1; }
  "spectral_simple"                   = { dataRepresentationTemplateNumber = 50; spectralType=1; spectralMode=1; }
  "grid_simple_matrix"                = { dataRepresentationTemplateNumber = 1;     }
  "grid_complex"                      = { dataRepresentationTemplateNumber = 2;     }
  "grid_complex_spatial_differencing" = { dataRepresentationTemplateNumber = 3;     }
  "grid_jpeg"                         = { dataRepresentationTemplateNumber = 40000; }
  "grid_jpeg"                         = { dataRepresentationTemplateNumber = 40;    }
  "grid_png"                          = { dataRepresentationTemplateNumber = 40010; }
  "grid_png"                          = { dataRepresentationTemplateNumber = 41;    }
  "grid_ieee"                         = { dataRepresentationTemplateNumber = 4;     }
  "grid_simple_log_preprocessing"     = { dataRepresentationTemplateNumber = 61;    }
  "grid_second_order"                 = { dataRepresentationTemplateNumber = 0;     }
  "grid_second_order_different_width" = { dataRepresentationTemplateNumber = 0;  }
}  : dump;

alias ls.packingType=packingType;
alias dataRepresentation=packingType;
alias typeOfPacking=packingType;

meta md5Section5 md5(offsetSection5,section5Length);
